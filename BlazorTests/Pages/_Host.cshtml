@page "/"
@namespace BlazorTests.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BlazorTests</title>
    <base href="~/" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/virtual-keyboard/1.30.3/css/keyboard-basic.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BlazorTests.styles.css" rel="stylesheet" />
</head>
<body>
    <component type="typeof(App)" render-mode="Server" />

<div id="blazor-error-ui">
    <environment include="Staging,Production">
        An error has occurred. This application may no longer respond until reloaded.
    </environment>
    <environment include="Development">
        An unhandled exception has occurred. See browser dev tools for details.
    </environment>
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/virtual-keyboard/1.30.3/css/keyboard-basic.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/virtual-keyboard/1.30.3/js/jquery.keyboard.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/virtual-keyboard/1.30.3/css/keyboard-basic.min.css" rel="stylesheet" />
    <script>
        function klawa() {
            try {
                console.log('test 222')
                $('#text')
                    .keyboard({
                        usePreview: true, // disabled for contenteditable
                        useCombos: false,
                        autoAccept: true,
                        layout: 'qwerty'
                    })

                    .addTyping();
            } catch (e) {
                //console.log(e);
            }
        }
    </script>
    @*<script>
        function keyboardPrompt(message, defaultValue) {
            try {
                var box = $('#text');
                box.show().val(defaultValue).attr('placeholder', message).keyboard({
                        usePreview: true, // disabled for contenteditable
                        useCombos: false,
                        autoAccept: true,
                        layout: 'qwerty'
                    })
                    .addTyping();

                return new Promise(accept => box.on('accepted cancelled', e => accept(e.type == 'accepted' ? box.val() : null)));
            } catch (e) {

            }
        }
    </script>*@
    @*<script defer>
		    
            try {
                console.log('test 222')
                $('#text')
                    .keyboard({
                        usePreview: true, // disabled for contenteditable
                        useCombos: false,
                        autoAccept: true,
                        layout: 'qwerty'
                    })
                    .addTyping();
            } catch (e) {
                //console.log(e);
            }
    </script>*@
</body>
</html>
